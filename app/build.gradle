plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'

String getMapsApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['MAPS_API_KEY']
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.xpense.android"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 48
        versionName "0.46.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField ("String", "MAPS_API_KEY", getMapsApiKey())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Set both the Java and Kotlin compilers to target Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    composeOptions {
        kotlinCompilerExtensionVersion version_compose_compiler
    }

    // Enable data binding
    buildFeatures {
        dataBinding true
        // Enables Jetpack Compose for this module
        compose true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }

    // Test source sets
//    sourceSets {
//        test.java.srcDirs += 'src/test/kotlin/'
//        androidTest.java.srcDirs += 'src/androidTest/kotlin/'
//    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "com.google.android.material:material:$version_material"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "androidx.preference:preference-ktx:$version_androidx_preference_ktx"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Room
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Logging
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Firebase
    implementation "com.firebaseui:firebase-ui-auth:$version_firebase_ui_auth"
    implementation platform("com.google.firebase:firebase-bom:$version_firebase")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Add the dependencies for any other desired Firebase products:
    // https://firebase.google.com/docs/android/setup#available-libraries

    // Compose
    // Compose Material Design
    implementation "androidx.compose.material:material:$version_compose"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$version_compose"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$version_lifecycle"
    // When using a MDC theme
//    implementation "com.google.android.material:compose-theme-adapter:$version_compose_material_theme_adapter"
    // When using a AppCompat theme
//    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"
    // Material icons
    implementation "androidx.compose.material:material-icons-extended:$version_compose"

    // Maps
    implementation "com.google.android.gms:play-services-maps:$version_maps"

    implementation "androidx.test.espresso:espresso-idling-resource:$version_espresso"

    // Unit Test
    testImplementation "junit:junit:$version_junit"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"

    // AndroidX Test
    testImplementation "androidx.arch.core:core-testing:$version_arch_testing"
    testImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    testImplementation "androidx.test.ext:junit-ktx:$version_androidx_test_ext_kotlin_runner"
    testImplementation "org.robolectric:robolectric:$version_robolectric"

    // Android instrumented unit tests
    androidTestImplementation "junit:junit:$version_junit"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    androidTestImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "org.mockito:mockito-android:$version_mockito"
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$version_dex_maker"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"

    androidTestImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    androidTestImplementation "androidx.test:core:$version_androidx_test_core"

    // AndroidX and Espresso Test
    androidTestImplementation "androidx.test.ext:junit:$version_androidx_test_ext_kotlin_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    androidTestImplementation "androidx.arch.core:core-testing:$version_arch_testing"

    // Fragments testing
    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    implementation "androidx.test:core:$version_androidx_test_core"

    // Compose testing dependencies
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$version_compose"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$version_compose"
}
